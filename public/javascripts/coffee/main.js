// Generated by CoffeeScript 1.6.3
(function() {
  var Project, ProjectOverlayView, Showcase;

  Project = (function() {
    function Project(data) {
      if (data == null) {
        data = {};
      }
      this.set_data(data);
    }

    Project.prototype.set_data = function(data) {
      if (data == null) {
        data = {};
      }
      return this.data = _.extend({
        title: '',
        description: '',
        images: [],
        display_url: '',
        full_url: ''
      }, data);
    };

    return Project;

  })();

  ProjectOverlayView = (function() {
    function ProjectOverlayView(container, projects) {
      this.projects = projects != null ? projects : [];
      this.container = $(container);
      this.overlay = $('#master-overlay').hide();
      this.current_project = 0;
      this.current_image_idx = 0;
      this.open = false;
      this.template = _.template($('#project-overlay-template').html());
      this.setup_events();
    }

    ProjectOverlayView.prototype.setup_events = function() {
      var _this = this;
      this.overlay.on('click', function(e) {
        return _this.hide();
      });
      return this.container.on('click', function(e) {
        var $el;
        $el = $(e.target);
        if ($el.is('span')) {
          $el.parent().trigger('click');
          return false;
        }
        if (_.indexOf(['next_image', 'prev_image', 'hide'], $el.data('action'))) {
          e.preventDefault();
        }
        switch ($el.data('action')) {
          case 'hide':
            return _this.hide();
          case 'next_image':
            return _this.cycle_images(1);
          case 'prev_image':
            return _this.cycle_images(-1);
        }
      });
    };

    ProjectOverlayView.prototype.cycle_images = function(dir) {
      var $viewed, $viewing, next_idx,
        _this = this;
      if (dir == null) {
        dir = 1;
      }
      if (!this.project) {
        return this.current_image_idx = 0;
      }
      next_idx = this.current_image_idx + dir;
      if (next_idx > this.project.images.length - 1) {
        next_idx = next_idx % this.project.images.length;
      } else if (next_idx < 0) {
        next_idx += this.project.images.length;
      }
      this.current_image_idx = next_idx;
      $viewed = this.images_container.find('.viewing').removeClass('viewing');
      if (dir > 0) {
        $viewed.addClass('viewed');
      }
      $viewing = $(this.images_container.find('img')[this.current_image_idx]).removeClass('viewed').addClass('viewing');
      if ($viewing.height() < 1) {
        $viewing.load(function() {
          return _this.container.find('.images-column').height($viewing.height() + 2);
        });
      } else {
        this.container.find('.images-column').height($viewing.height() + 2);
      }
      return this.current_image_idx;
    };

    ProjectOverlayView.prototype.open_project = function(index) {
      if (index == null) {
        index = 0;
      }
      if (!_.has(this.projects, index)) {
        return false;
      }
      this.current_project = index;
      this.project = this.projects[index];
      window.location.hash = this.project.slug;
      this.current_image_idx = 0;
      this.render();
      this.setup_paddles();
      this.cycle_images(0);
      return this.show();
    };

    ProjectOverlayView.prototype.setup_paddles = function() {
      if (!this.project) {
        return;
      }
      this.paddles.filter('.next').children('a').data('action', 'next_image');
      this.paddles.filter('.prev').children('a').data('action', 'prev_image');
      if (this.project.images.length < 2) {
        return this.paddles.hide();
      } else {
        return this.paddles.show();
      }
    };

    ProjectOverlayView.prototype.show = function() {
      if (this.open) {
        return;
      }
      this.open = true;
      this.overlay.fadeIn();
      return this.container.fadeIn();
    };

    ProjectOverlayView.prototype.hide = function() {
      if (!this.open) {
        return;
      }
      this.open = false;
      window.location.hash = "";
      this.container.fadeOut();
      return this.overlay.fadeOut();
    };

    ProjectOverlayView.prototype.render = function() {
      if (!this.template) {
        return;
      }
      this.container.empty();
      this.container.html(this.template({
        project: this.project
      }));
      this.images_container = this.container.find('.images-container');
      return this.paddles = this.container.find('.paddle');
    };

    return ProjectOverlayView;

  })();

  /* --------------------------------------------
       Begin Showcase.coffee
  --------------------------------------------
  */


  Showcase = (function() {
    function Showcase(container, opts) {
      if (opts == null) {
        opts = {};
      }
      this.first_load = true;
      this.container = $(container);
      this.items = this.container.find('li[data-project]');
      this.fetch_projects();
      this.setup_events();
    }

    Showcase.prototype.setup_events = function() {
      var _this = this;
      return this.container.on('click', function(e) {
        var $el;
        $el = $(e.target);
        if ($el.is('a')) {
          return;
        }
        e.preventDefault();
        if ($el.is('[data-project]')) {
          return _this.open_project_overlay($el.data('project'));
        } else if ($el.closest('[data-project]').length) {
          $el.closest('[data-project]').click();
          return false;
        }
      });
    };

    Showcase.prototype.fetch_projects = function() {
      var $li, li, _i, _len, _ref,
        _this = this;
      this.projects = {};
      _ref = this.items;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        li = _ref[_i];
        $li = $(li);
        this.projects[$li.data('project')] = {};
      }
      return $.ajax({
        type: 'GET',
        url: '/get_projects',
        dataType: 'json',
        success: function(msg) {
          var project, _j, _len1;
          for (_j = 0, _len1 = msg.length; _j < _len1; _j++) {
            project = msg[_j];
            if (_.has(_this.projects, project.slug)) {
              _this.projects[project.slug] = project;
            }
          }
          return _this.setup_project_overlay_view();
        }
      });
    };

    Showcase.prototype.setup_project_overlay_view = function() {
      var $first_load;
      this.project_overlay_view = new ProjectOverlayView('#project-overlay', this.projects);
      if (this.first_load && window.location.hash.length > 1) {
        $first_load = false;
        return this.open_project_overlay(window.location.hash.replace('#', ''));
      }
    };

    Showcase.prototype.open_project_overlay = function(for_project) {
      return this.project_overlay_view.open_project(for_project);
    };

    return Showcase;

  })();

  /* --------------------------------------------
       Begin main.coffee
  --------------------------------------------
  */


  $(function() {
    var overlay;
    overlay = $(".overlay").hide();
    return World.showcase = new Showcase("#showcase");
  });

}).call(this);
